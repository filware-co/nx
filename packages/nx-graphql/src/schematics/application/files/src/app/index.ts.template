import { ApolloServer } from 'apollo-server';
import 'reflect-metadata';
import mongoose from 'mongoose';
import { buildSchema } from 'type-graphql';

import * as users from './users';
import * as posts from './posts';

export const start = async () => {
  // Database
  mongoose.connect(process.env.MONGODB_URI, {
    useUnifiedTopology: true,
    useNewUrlParser: true,
  });

  const db = mongoose.connection;
  db.on('error', console.error.bind(console, 'MongoDB connection error:'));

  // GraphQL Server
  const schema = await buildSchema({
    resolvers: [
      users.UserResolver,
      posts.PostResolver,
    ],
  });
  const port = process.env.port || 3333;
  const server = new ApolloServer({ schema });
  const { url } = await server.listen({ port });

  console.log(`Listening at ${url}`);
}
